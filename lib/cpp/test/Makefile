# Makefile.in generated by automake 1.11 from Makefile.am.
# lib/cpp/test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#



pkgdatadir = $(datadir)/thrift
pkgincludedir = $(includedir)/thrift
pkglibdir = $(libdir)/thrift
pkglibexecdir = $(libexecdir)/thrift
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
noinst_PROGRAMS = Benchmark$(EXEEXT)
check_PROGRAMS = TFDTransportTest$(EXEEXT) \
	TPipedTransportTest$(EXEEXT) DebugProtoTest$(EXEEXT) \
	JSONProtoTest$(EXEEXT) OptionalRequiredTest$(EXEEXT) \
	SpecializationTest$(EXEEXT) AllProtocolsTest$(EXEEXT) \
	TransportTest$(EXEEXT) ZlibTest$(EXEEXT) \
	TFileTransportTest$(EXEEXT) UnitTests$(EXEEXT)
subdir = lib/cpp/test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal/ax_boost_base.m4 \
	$(top_srcdir)/aclocal/ax_javac_and_java.m4 \
	$(top_srcdir)/aclocal/ax_lib_event.m4 \
	$(top_srcdir)/aclocal/ax_lib_zlib.m4 \
	$(top_srcdir)/aclocal/ax_prog_perl_modules.m4 \
	$(top_srcdir)/aclocal/ax_signed_right_shift.m4 \
	$(top_srcdir)/aclocal/ax_thrift_internal.m4 \
	$(top_srcdir)/aclocal/libtool.m4 \
	$(top_srcdir)/aclocal/ltoptions.m4 \
	$(top_srcdir)/aclocal/ltsugar.m4 \
	$(top_srcdir)/aclocal/ltversion.m4 \
	$(top_srcdir)/aclocal/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libtestgencpp_la_DEPENDENCIES = $(top_builddir)/lib/cpp/libthrift.la
nodist_libtestgencpp_la_OBJECTS = DebugProtoTest_types.lo \
	OptionalRequiredTest_types.lo DebugProtoTest_types.lo \
	ThriftTest_types.lo ThriftTest_extras.lo \
	DebugProtoTest_extras.lo
libtestgencpp_la_OBJECTS = $(nodist_libtestgencpp_la_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am_AllProtocolsTest_OBJECTS = AllProtocolTests.$(OBJEXT)
AllProtocolsTest_OBJECTS = $(am_AllProtocolsTest_OBJECTS)
AllProtocolsTest_DEPENDENCIES = libtestgencpp.la
am_Benchmark_OBJECTS = Benchmark.$(OBJEXT)
Benchmark_OBJECTS = $(am_Benchmark_OBJECTS)
Benchmark_DEPENDENCIES = libtestgencpp.la
am_DebugProtoTest_OBJECTS = DebugProtoTest.$(OBJEXT)
DebugProtoTest_OBJECTS = $(am_DebugProtoTest_OBJECTS)
DebugProtoTest_DEPENDENCIES = libtestgencpp.la
am_JSONProtoTest_OBJECTS = JSONProtoTest.$(OBJEXT)
JSONProtoTest_OBJECTS = $(am_JSONProtoTest_OBJECTS)
JSONProtoTest_DEPENDENCIES = libtestgencpp.la
am_OptionalRequiredTest_OBJECTS = OptionalRequiredTest.$(OBJEXT)
OptionalRequiredTest_OBJECTS = $(am_OptionalRequiredTest_OBJECTS)
OptionalRequiredTest_DEPENDENCIES = libtestgencpp.la
am_SpecializationTest_OBJECTS = SpecializationTest.$(OBJEXT)
SpecializationTest_OBJECTS = $(am_SpecializationTest_OBJECTS)
SpecializationTest_DEPENDENCIES = libtestgencpp.la
am_TFDTransportTest_OBJECTS = TFDTransportTest.$(OBJEXT)
TFDTransportTest_OBJECTS = $(am_TFDTransportTest_OBJECTS)
TFDTransportTest_DEPENDENCIES = $(top_builddir)/lib/cpp/libthrift.la
am_TFileTransportTest_OBJECTS = TFileTransportTest.$(OBJEXT)
TFileTransportTest_OBJECTS = $(am_TFileTransportTest_OBJECTS)
TFileTransportTest_DEPENDENCIES = libtestgencpp.la \
	$(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a
am_TPipedTransportTest_OBJECTS = TPipedTransportTest.$(OBJEXT)
TPipedTransportTest_OBJECTS = $(am_TPipedTransportTest_OBJECTS)
TPipedTransportTest_DEPENDENCIES =  \
	$(top_builddir)/lib/cpp/libthrift.la
am_TransportTest_OBJECTS = TransportTest.$(OBJEXT)
TransportTest_OBJECTS = $(am_TransportTest_OBJECTS)
TransportTest_DEPENDENCIES = libtestgencpp.la \
	$(top_builddir)/lib/cpp/libthriftz.la \
	$(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a
am_UnitTests_OBJECTS = UnitTestMain.$(OBJEXT) \
	TMemoryBufferTest.$(OBJEXT) TBufferBaseTest.$(OBJEXT)
UnitTests_OBJECTS = $(am_UnitTests_OBJECTS)
UnitTests_DEPENDENCIES = libtestgencpp.la \
	$(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a
am_ZlibTest_OBJECTS = ZlibTest.$(OBJEXT)
ZlibTest_OBJECTS = $(am_ZlibTest_OBJECTS)
ZlibTest_DEPENDENCIES = libtestgencpp.la \
	$(top_builddir)/lib/cpp/libthriftz.la \
	$(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(nodist_libtestgencpp_la_SOURCES) \
	$(AllProtocolsTest_SOURCES) $(Benchmark_SOURCES) \
	$(DebugProtoTest_SOURCES) $(JSONProtoTest_SOURCES) \
	$(OptionalRequiredTest_SOURCES) $(SpecializationTest_SOURCES) \
	$(TFDTransportTest_SOURCES) $(TFileTransportTest_SOURCES) \
	$(TPipedTransportTest_SOURCES) $(TransportTest_SOURCES) \
	$(UnitTests_SOURCES) $(ZlibTest_SOURCES)
DIST_SOURCES = $(AllProtocolsTest_SOURCES) $(Benchmark_SOURCES) \
	$(DebugProtoTest_SOURCES) $(JSONProtoTest_SOURCES) \
	$(OptionalRequiredTest_SOURCES) $(SpecializationTest_SOURCES) \
	$(TFDTransportTest_SOURCES) $(TFileTransportTest_SOURCES) \
	$(TPipedTransportTest_SOURCES) $(TransportTest_SOURCES) \
	$(UnitTests_SOURCES) $(ZlibTest_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/hardik/stuff/thrift-0.8.0/missing --run aclocal-1.11
ALLOCA = 
AMTAR = ${SHELL} /home/hardik/stuff/thrift-0.8.0/missing --run tar
ANT = /usr/bin/ant
ANT_FLAGS = 
AR = ar
AUTOCONF = ${SHELL} /home/hardik/stuff/thrift-0.8.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/hardik/stuff/thrift-0.8.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/hardik/stuff/thrift-0.8.0/missing --run automake-1.11
AWK = mawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib
BOOST_ROOT_PATH = /usr
BUNDLER = /usr/bin/bundle
CABAL = true
CABAL_CONFIGURE_FLAGS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLASSPATH = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_COVERAGE = 2
ERL = 
ERLANG_INSTALL_LIB_DIR = 
ERLANG_INSTALL_LIB_DIR_thrift = 
ERLANG_LIB_DIR = 
ERLC = 
ERLCFLAGS = 
EXEEXT = 
FGREP = /bin/grep -F
GCOV_CFLAGS = 
GCOV_CXXFLAGS = 
GCOV_LDFLAGS = 
GLIB_CFLAGS = 
GLIB_LIBS = 
GOARCH = amd64
GOBIN = /usr/local/bin
GOBJECT_CFLAGS = 
GOBJECT_LIBS = 
GOINSTALL = /usr/local/bin/goinstall
GOMAKE = /usr/local/bin/gomake
GOROOT = /usr/local/share/go
GO_C = /usr/local/bin/6g
GO_L = /usr/local/bin/6l
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALLDIRS = vendor
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA_PREFIX = /usr/local/lib
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBEVENT_CPPFLAGS = 
LIBEVENT_LDFLAGS = 
LIBEVENT_LIBS = -levent
LIBOBJS = 
LIBS = -lssl -lcrypto -lrt -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/hardik/stuff/thrift-0.8.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MONO_CFLAGS = 
MONO_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = thrift
PACKAGE_BUGREPORT = 
PACKAGE_NAME = thrift
PACKAGE_STRING = thrift 0.8.0
PACKAGE_TARNAME = thrift
PACKAGE_URL = 
PACKAGE_VERSION = 0.8.0
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PERL_PREFIX = /usr/local
PHP = 
PHP_CONFIG = 
PHP_CONFIG_PREFIX = /etc/php.d
PHP_PREFIX = /usr/lib/php
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PYTHON = /home/hardik/affine/env/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
PY_PREFIX = /usr
RAKE = /usr/bin/rake
RANLIB = ranlib
RUBY = /usr/bin/ruby
RUBY_PREFIX = 
RUNHASKELL = true
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TRIAL = /usr/bin/trial
VERSION = 0.8.0
YACC = bison -y
YFLAGS = 
ZLIB_CPPFLAGS = 
ZLIB_LDFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /home/hardik/stuff/thrift-0.8.0/lib/cpp/test
abs_srcdir = /home/hardik/stuff/thrift-0.8.0/lib/cpp/test
abs_top_builddir = /home/hardik/stuff/thrift-0.8.0
abs_top_srcdir = /home/hardik/stuff/thrift-0.8.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/hardik/stuff/thrift-0.8.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/thrift
pkgpythondir = ${pythondir}/thrift
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
noinst_LTLIBRARIES = libtestgencpp.la
nodist_libtestgencpp_la_SOURCES = \
	gen-cpp/DebugProtoTest_types.cpp \
	gen-cpp/OptionalRequiredTest_types.cpp \
	gen-cpp/DebugProtoTest_types.cpp \
	gen-cpp/ThriftTest_types.cpp \
	gen-cpp/DebugProtoTest_types.h \
	gen-cpp/OptionalRequiredTest_types.h \
	gen-cpp/ThriftTest_types.h \
	ThriftTest_extras.cpp \
	DebugProtoTest_extras.cpp

libtestgencpp_la_LIBADD = $(top_builddir)/lib/cpp/libthrift.la
Benchmark_SOURCES = \
	Benchmark.cpp

Benchmark_LDADD = libtestgencpp.la
TESTS_ENVIRONMENT = \
	BOOST_TEST_LOG_SINK=tests.xml \
	BOOST_TEST_LOG_LEVEL=test_suite \
	BOOST_TEST_LOG_FORMAT=xml

TESTS = \
	$(check_PROGRAMS)

UnitTests_SOURCES = \
	UnitTestMain.cpp \
	TMemoryBufferTest.cpp \
	TBufferBaseTest.cpp

UnitTests_LDADD = \
  libtestgencpp.la \
  $(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a

TransportTest_SOURCES = \
	TransportTest.cpp

TransportTest_LDADD = \
  libtestgencpp.la \
  $(top_builddir)/lib/cpp/libthriftz.la \
  $(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a \
  -lz

ZlibTest_SOURCES = \
	ZlibTest.cpp

ZlibTest_LDADD = \
  libtestgencpp.la \
  $(top_builddir)/lib/cpp/libthriftz.la \
  $(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a \
  -lz

TFileTransportTest_SOURCES = \
	TFileTransportTest.cpp

TFileTransportTest_LDADD = \
  libtestgencpp.la \
  $(BOOST_ROOT_PATH)/lib/libboost_unit_test_framework.a


#
# TFDTransportTest
#
TFDTransportTest_SOURCES = \
	TFDTransportTest.cpp

TFDTransportTest_LDADD = \
	$(top_builddir)/lib/cpp/libthrift.la


#
# TPipedTransportTest
#
TPipedTransportTest_SOURCES = \
	TPipedTransportTest.cpp

TPipedTransportTest_LDADD = \
	$(top_builddir)/lib/cpp/libthrift.la


#
# AllProtocolsTest
#
AllProtocolsTest_SOURCES = \
	AllProtocolTests.cpp \
	AllProtocolTests.tcc \
	GenericHelpers.h

AllProtocolsTest_LDADD = libtestgencpp.la

#
# DebugProtoTest
#
DebugProtoTest_SOURCES = \
	DebugProtoTest.cpp

DebugProtoTest_LDADD = libtestgencpp.la

#
# JSONProtoTest
#
JSONProtoTest_SOURCES = \
	JSONProtoTest.cpp

JSONProtoTest_LDADD = libtestgencpp.la

#
# OptionalRequiredTest
#
OptionalRequiredTest_SOURCES = \
	OptionalRequiredTest.cpp

OptionalRequiredTest_LDADD = libtestgencpp.la

#
# SpecializationTest
#
SpecializationTest_SOURCES = \
	SpecializationTest.cpp

SpecializationTest_LDADD = libtestgencpp.la

#
# Common thrift code generation rules
#
THRIFT = $(top_builddir)/compiler/cpp/thrift
INCLUDES = \
	-I$(top_srcdir)/lib/cpp/src

AM_CPPFLAGS = $(BOOST_CPPFLAGS)
AM_LDFLAGS = $(BOOST_LDFLAGS)
AM_CXXFLAGS = -Wall
EXTRA_DIST = \
	DenseProtoTest.cpp \
	ThriftTest_extras.cpp \
	DebugProtoTest_extras.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign lib/cpp/test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign lib/cpp/test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libtestgencpp.la: $(libtestgencpp_la_OBJECTS) $(libtestgencpp_la_DEPENDENCIES) 
	$(CXXLINK)  $(libtestgencpp_la_OBJECTS) $(libtestgencpp_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
AllProtocolsTest$(EXEEXT): $(AllProtocolsTest_OBJECTS) $(AllProtocolsTest_DEPENDENCIES) 
	@rm -f AllProtocolsTest$(EXEEXT)
	$(CXXLINK) $(AllProtocolsTest_OBJECTS) $(AllProtocolsTest_LDADD) $(LIBS)
Benchmark$(EXEEXT): $(Benchmark_OBJECTS) $(Benchmark_DEPENDENCIES) 
	@rm -f Benchmark$(EXEEXT)
	$(CXXLINK) $(Benchmark_OBJECTS) $(Benchmark_LDADD) $(LIBS)
DebugProtoTest$(EXEEXT): $(DebugProtoTest_OBJECTS) $(DebugProtoTest_DEPENDENCIES) 
	@rm -f DebugProtoTest$(EXEEXT)
	$(CXXLINK) $(DebugProtoTest_OBJECTS) $(DebugProtoTest_LDADD) $(LIBS)
JSONProtoTest$(EXEEXT): $(JSONProtoTest_OBJECTS) $(JSONProtoTest_DEPENDENCIES) 
	@rm -f JSONProtoTest$(EXEEXT)
	$(CXXLINK) $(JSONProtoTest_OBJECTS) $(JSONProtoTest_LDADD) $(LIBS)
OptionalRequiredTest$(EXEEXT): $(OptionalRequiredTest_OBJECTS) $(OptionalRequiredTest_DEPENDENCIES) 
	@rm -f OptionalRequiredTest$(EXEEXT)
	$(CXXLINK) $(OptionalRequiredTest_OBJECTS) $(OptionalRequiredTest_LDADD) $(LIBS)
SpecializationTest$(EXEEXT): $(SpecializationTest_OBJECTS) $(SpecializationTest_DEPENDENCIES) 
	@rm -f SpecializationTest$(EXEEXT)
	$(CXXLINK) $(SpecializationTest_OBJECTS) $(SpecializationTest_LDADD) $(LIBS)
TFDTransportTest$(EXEEXT): $(TFDTransportTest_OBJECTS) $(TFDTransportTest_DEPENDENCIES) 
	@rm -f TFDTransportTest$(EXEEXT)
	$(CXXLINK) $(TFDTransportTest_OBJECTS) $(TFDTransportTest_LDADD) $(LIBS)
TFileTransportTest$(EXEEXT): $(TFileTransportTest_OBJECTS) $(TFileTransportTest_DEPENDENCIES) 
	@rm -f TFileTransportTest$(EXEEXT)
	$(CXXLINK) $(TFileTransportTest_OBJECTS) $(TFileTransportTest_LDADD) $(LIBS)
TPipedTransportTest$(EXEEXT): $(TPipedTransportTest_OBJECTS) $(TPipedTransportTest_DEPENDENCIES) 
	@rm -f TPipedTransportTest$(EXEEXT)
	$(CXXLINK) $(TPipedTransportTest_OBJECTS) $(TPipedTransportTest_LDADD) $(LIBS)
TransportTest$(EXEEXT): $(TransportTest_OBJECTS) $(TransportTest_DEPENDENCIES) 
	@rm -f TransportTest$(EXEEXT)
	$(CXXLINK) $(TransportTest_OBJECTS) $(TransportTest_LDADD) $(LIBS)
UnitTests$(EXEEXT): $(UnitTests_OBJECTS) $(UnitTests_DEPENDENCIES) 
	@rm -f UnitTests$(EXEEXT)
	$(CXXLINK) $(UnitTests_OBJECTS) $(UnitTests_LDADD) $(LIBS)
ZlibTest$(EXEEXT): $(ZlibTest_OBJECTS) $(ZlibTest_DEPENDENCIES) 
	@rm -f ZlibTest$(EXEEXT)
	$(CXXLINK) $(ZlibTest_OBJECTS) $(ZlibTest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AllProtocolTests.Po
include ./$(DEPDIR)/Benchmark.Po
include ./$(DEPDIR)/DebugProtoTest.Po
include ./$(DEPDIR)/DebugProtoTest_extras.Plo
include ./$(DEPDIR)/DebugProtoTest_types.Plo
include ./$(DEPDIR)/JSONProtoTest.Po
include ./$(DEPDIR)/OptionalRequiredTest.Po
include ./$(DEPDIR)/OptionalRequiredTest_types.Plo
include ./$(DEPDIR)/SpecializationTest.Po
include ./$(DEPDIR)/TBufferBaseTest.Po
include ./$(DEPDIR)/TFDTransportTest.Po
include ./$(DEPDIR)/TFileTransportTest.Po
include ./$(DEPDIR)/TMemoryBufferTest.Po
include ./$(DEPDIR)/TPipedTransportTest.Po
include ./$(DEPDIR)/ThriftTest_extras.Plo
include ./$(DEPDIR)/ThriftTest_types.Plo
include ./$(DEPDIR)/TransportTest.Po
include ./$(DEPDIR)/UnitTestMain.Po
include ./$(DEPDIR)/ZlibTest.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

DebugProtoTest_types.lo: gen-cpp/DebugProtoTest_types.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DebugProtoTest_types.lo -MD -MP -MF $(DEPDIR)/DebugProtoTest_types.Tpo -c -o DebugProtoTest_types.lo `test -f 'gen-cpp/DebugProtoTest_types.cpp' || echo '$(srcdir)/'`gen-cpp/DebugProtoTest_types.cpp
	$(am__mv) $(DEPDIR)/DebugProtoTest_types.Tpo $(DEPDIR)/DebugProtoTest_types.Plo
#	source='gen-cpp/DebugProtoTest_types.cpp' object='DebugProtoTest_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DebugProtoTest_types.lo `test -f 'gen-cpp/DebugProtoTest_types.cpp' || echo '$(srcdir)/'`gen-cpp/DebugProtoTest_types.cpp

OptionalRequiredTest_types.lo: gen-cpp/OptionalRequiredTest_types.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptionalRequiredTest_types.lo -MD -MP -MF $(DEPDIR)/OptionalRequiredTest_types.Tpo -c -o OptionalRequiredTest_types.lo `test -f 'gen-cpp/OptionalRequiredTest_types.cpp' || echo '$(srcdir)/'`gen-cpp/OptionalRequiredTest_types.cpp
	$(am__mv) $(DEPDIR)/OptionalRequiredTest_types.Tpo $(DEPDIR)/OptionalRequiredTest_types.Plo
#	source='gen-cpp/OptionalRequiredTest_types.cpp' object='OptionalRequiredTest_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptionalRequiredTest_types.lo `test -f 'gen-cpp/OptionalRequiredTest_types.cpp' || echo '$(srcdir)/'`gen-cpp/OptionalRequiredTest_types.cpp

ThriftTest_types.lo: gen-cpp/ThriftTest_types.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ThriftTest_types.lo -MD -MP -MF $(DEPDIR)/ThriftTest_types.Tpo -c -o ThriftTest_types.lo `test -f 'gen-cpp/ThriftTest_types.cpp' || echo '$(srcdir)/'`gen-cpp/ThriftTest_types.cpp
	$(am__mv) $(DEPDIR)/ThriftTest_types.Tpo $(DEPDIR)/ThriftTest_types.Plo
#	source='gen-cpp/ThriftTest_types.cpp' object='ThriftTest_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThriftTest_types.lo `test -f 'gen-cpp/ThriftTest_types.cpp' || echo '$(srcdir)/'`gen-cpp/ThriftTest_types.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


ThriftTest_extras.o: gen-cpp/ThriftTest_types.h
DebugProtoTest_extras.o: gen-cpp/DebugProtoTest_types.h

gen-cpp/DebugProtoTest_types.cpp gen-cpp/DebugProtoTest_types.h: $(top_srcdir)/test/DebugProtoTest.thrift
	$(THRIFT) --gen cpp:dense $<

gen-cpp/OptionalRequiredTest_types.cpp gen-cpp/OptionalRequiredTest_types.h: $(top_srcdir)/test/OptionalRequiredTest.thrift
	$(THRIFT) --gen cpp:dense $<

gen-cpp/Service.cpp gen-cpp/StressTest_types.cpp: $(top_srcdir)/test/StressTest.thrift
	$(THRIFT) --gen cpp:dense $<

gen-cpp/SecondService.cpp gen-cpp/ThriftTest_constants.cpp gen-cpp/ThriftTest.cpp gen-cpp/ThriftTest_types.cpp gen-cpp/ThriftTest_types.h: $(top_srcdir)/test/ThriftTest.thrift
	$(THRIFT) --gen cpp:dense $<

clean-local:
	$(RM) -r gen-cpp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
